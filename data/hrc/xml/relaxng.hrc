<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd" version="take5">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="relaxng" group="group" description="relaxng" targetNamespace="http://relaxng.org/ns/structure/1.0">
    <location link="relaxng.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="relaxng">
<annotation>
<documentation>
           XSLT Generated HRC scheme for language 'relaxng'
           from XML Schema with xsd2hrc.xsl version 0.9.4 
            Copyright (C) 2002-04 Cail Lomecb
            Portions copyright (C) 2004-06 Eugene Efremov

           Scheme parameters:
             targetNamespace             : http://relaxng.org/ns/structure/1.0
             hrctype                     : relaxng
             allow-common-attr           : yes
             allow-any-attr              : no
             allow-unknown-elements      : no
             allow-unknown-root-elements : no
             force-single-root           : yes
             default prefixes            : (?{}(?{}r|rn|rng)(?{}:))?
               you can change them with entity 'nsprefix'
             
             </documentation>
<documentation>
          Schema documentation:</documentation>
<contributors><![CDATA[None]]></contributors>
</annotation>
<import type="def"/>
<region parent="xml:element.defined.start.name" name="element.start.name"/>
<region parent="xml:element.defined.end.name" name="element.end.name"/>
<region parent="xml:element.start.lt" name="element.start.lt"/>
<region parent="xml:element.start.gt" name="element.start.gt"/>
<region parent="xml:element.end.lt" name="element.end.lt"/>
<region parent="xml:element.end.gt" name="element.end.gt"/>
<region parent="element.start.name" name="element.nsprefix"/>
<region parent="xml:element.nscolon" name="element.nscolon"/>
<region parent="xml:Attribute.defined.name" name="Attribute.name"/>
<region parent="xml:Attribute.nsprefix" name="Attribute.nsprefix"/>
<region parent="xml:Attribute.nscolon" name="Attribute.nscolon"/>
<region parent="xml:AttValue.defined" name="AttValue"/>
<region parent="xml:AttValue.defined.start" name="AttValue.start"/>
<region parent="xml:AttValue.defined.end" name="AttValue.end"/>
<region description="Enumerated type values" parent="xml:Enumeration" name="Enumeration"/>
<region description="Relax NG Grammar" name="grammarOutlined" parent="def:Outlined"/>
<region description="Relax NG Define" name="defineOutlined" parent="def:Outlined"/>
<region description="Relax NG Start of schema" name="startOutlined" parent="def:Outlined"/>
<region description="Relax NG Element" name="elementOutlined" parent="def:Outlined"/>
<entity value="(?{}(?{}r|rn|rng)(?{}:))" name="ns-real-prefix"/>
<entity value="(?{}(?{}r|rn|rng)(?{}:))?" name="nsprefix"/>
<entity value="(?{}(?{}r|rn|rng)(?{Attribute.nscolon}:))" name="attr-nsprefix"/>
<scheme name="_hrc_int_elementContent">
<block scheme="xml:elementContent2" region19="element.start.gt" region18="element.end.gt" region17="element.end.name" region16="element.nscolon" region15="element.nsprefix" region12="element.end.lt" region11="PairEnd" region07="element.start.name" region06="element.nscolon" region05="element.nsprefix" region02="element.start.lt" region01="PairStart" end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x" start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_AttValue">
<block region="AttValue" scheme="xml:AttValue.content.quot" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(&quot;)/"/>
<block region="AttValue" scheme="xml:AttValue.content.apos" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(')/"/>
</scheme>
<scheme name="AttributeContent">
<inherit scheme="xml:AttributeContent">
<virtual subst-scheme="_hrc_int_AttValue" scheme="xml:AttValue"/>
</inherit>
</scheme>
<!--custom schemes from '../../src/hrc/relaxng/src/custom.relaxng.xml'-->
<!--end custom-->
<scheme name="commonAtts-attributeGroup">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(datatypeLibrary)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(ns)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(xmlns)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
</scheme>
<scheme name="pattern-group">
<inherit scheme="element-element"/>
<inherit scheme="attribute-element"/>
<inherit scheme="group-element"/>
<inherit scheme="interleave-element"/>
<inherit scheme="choice-element"/>
<inherit scheme="optional-element"/>
<inherit scheme="zeroOrMore-element"/>
<inherit scheme="oneOrMore-element"/>
<inherit scheme="list-element"/>
<inherit scheme="mixed-element"/>
<inherit scheme="ref-element"/>
<inherit scheme="parentRef-element"/>
<inherit scheme="empty-element"/>
<inherit scheme="text-element"/>
<inherit scheme="value-element"/>
<inherit scheme="data-element"/>
<inherit scheme="notAllowed-element"/>
<inherit scheme="externalRef-element"/>
<inherit scheme="grammar-element"/>
</scheme>
<scheme name="grammarContent-group">
<inherit scheme="start-element"/>
<inherit scheme="define-element"/>
<inherit scheme="div-element"/>
<inherit scheme="include-element"/>
</scheme>
<scheme name="includeContent-group">
<inherit scheme="start-element"/>
<inherit scheme="define-element"/>
<inherit scheme="div-element"/>
</scheme>
<scheme name="nameClass-group">
<inherit scheme="name-element"/>
<inherit scheme="anyName-element"/>
<inherit scheme="nsName-element"/>
</scheme>
<scheme name="element-element">
<regexp region1="elementOutlined" match="/\M (&lt; %nsprefix;element \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;element ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10060-elementContent"/>
</scheme>
<scheme name="attribute-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;attribute ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10073-elementContent"/>
</scheme>
<scheme name="group-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;group ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10087-elementContent"/>
</scheme>
<scheme name="interleave-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;interleave ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10090-elementContent"/>
</scheme>
<scheme name="choice-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;choice ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10099-elementContent"/>
</scheme>
<scheme name="optional-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;optional ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100A4-elementContent"/>
</scheme>
<scheme name="zeroOrMore-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;zeroOrMore ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100AD-elementContent"/>
</scheme>
<scheme name="oneOrMore-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;oneOrMore ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100B6-elementContent"/>
</scheme>
<scheme name="list-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;list ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100BF-elementContent"/>
</scheme>
<scheme name="mixed-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;mixed ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100C8-elementContent"/>
</scheme>
<scheme name="ref-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;ref ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100D1-elementContent"/>
</scheme>
<scheme name="parentRef-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;parentRef ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100DA-elementContent"/>
</scheme>
<scheme name="empty-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;empty ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100E3-elementContent"/>
</scheme>
<scheme name="text-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;text ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100E8-elementContent"/>
</scheme>
<scheme name="value-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;value ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100ED-elementContent"/>
</scheme>
<scheme name="data-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;data ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100F7-elementContent"/>
</scheme>
<scheme name="notAllowed-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;notAllowed ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1010B-elementContent"/>
</scheme>
<scheme name="externalRef-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;externalRef ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10110-elementContent"/>
</scheme>
<scheme name="grammar-element">
<regexp region1="grammarOutlined" match="/\M (&lt; %nsprefix;grammar \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;grammar ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10119-elementContent"/>
</scheme>
<scheme name="param-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;param ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10123-elementContent"/>
</scheme>
<scheme name="except-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;except ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1012B-elementContent"/>
</scheme>
<scheme name="div-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;div ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10136-elementContent"/>
</scheme>
<scheme name="include-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;include ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10140-elementContent"/>
</scheme>
<scheme name="start-element">
<regexp region1="startOutlined" match="/\M (&lt; %nsprefix;start \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;start ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1014E-elementContent"/>
</scheme>
<scheme name="define-element">
<regexp region1="defineOutlined" match="/\M (&lt; %nsprefix;define \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;define ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10160-elementContent"/>
</scheme>
<scheme name="name-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;name ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10177-elementContent"/>
</scheme>
<scheme name="anyName-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;anyName ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1017D-elementContent"/>
</scheme>
<scheme name="nsName-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;nsName ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10187-elementContent"/>
</scheme>
<!--
        parent: element
-->
<scheme name="_hrc_int_N10060-content">
<inherit scheme="nameClass-group"/>
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N10060-content-error">
<inherit scheme="_hrc_int_N10060-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10060-content-cdsect">
<inherit scheme="_hrc_int_N10060-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10060-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10060-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10060-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10060-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: attribute
-->
<scheme name="_hrc_int_N10073-content">
<inherit scheme="nameClass-group"/>
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N10073-content-error">
<inherit scheme="_hrc_int_N10073-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10073-content-cdsect">
<inherit scheme="_hrc_int_N10073-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10073-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10073-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10073-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10073-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: group
-->
<scheme name="_hrc_int_N10087-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N10087-content-error">
<inherit scheme="_hrc_int_N10087-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10087-content-cdsect">
<inherit scheme="_hrc_int_N10087-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10087-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10087-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10087-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10087-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: interleave
-->
<scheme name="_hrc_int_N10090-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N10090-content-error">
<inherit scheme="_hrc_int_N10090-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10090-content-cdsect">
<inherit scheme="_hrc_int_N10090-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10090-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10090-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10090-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10090-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: choice
-->
<scheme name="_hrc_int_N10099-content">
<inherit scheme="nameClass-group"/>
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N10099-content-error">
<inherit scheme="_hrc_int_N10099-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10099-content-cdsect">
<inherit scheme="_hrc_int_N10099-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10099-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10099-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10099-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10099-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: optional
-->
<scheme name="_hrc_int_N100A4-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N100A4-content-error">
<inherit scheme="_hrc_int_N100A4-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100A4-content-cdsect">
<inherit scheme="_hrc_int_N100A4-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100A4-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100A4-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100A4-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100A4-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: zeroOrMore
-->
<scheme name="_hrc_int_N100AD-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N100AD-content-error">
<inherit scheme="_hrc_int_N100AD-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100AD-content-cdsect">
<inherit scheme="_hrc_int_N100AD-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100AD-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100AD-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100AD-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100AD-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: oneOrMore
-->
<scheme name="_hrc_int_N100B6-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N100B6-content-error">
<inherit scheme="_hrc_int_N100B6-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100B6-content-cdsect">
<inherit scheme="_hrc_int_N100B6-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100B6-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100B6-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100B6-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100B6-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: list
-->
<scheme name="_hrc_int_N100BF-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N100BF-content-error">
<inherit scheme="_hrc_int_N100BF-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100BF-content-cdsect">
<inherit scheme="_hrc_int_N100BF-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100BF-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100BF-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100BF-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100BF-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: mixed
-->
<scheme name="_hrc_int_N100C8-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N100C8-content-error">
<inherit scheme="_hrc_int_N100C8-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100C8-content-cdsect">
<inherit scheme="_hrc_int_N100C8-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100C8-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100C8-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100C8-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100C8-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: ref
-->
<scheme name="_hrc_int_N100D1-content"/>
<scheme name="_hrc_int_N100D1-content-error">
<inherit scheme="_hrc_int_N100D1-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100D1-content-cdsect">
<inherit scheme="_hrc_int_N100D1-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100D1-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100D1-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100D1-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100D1-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: parentRef
-->
<scheme name="_hrc_int_N100DA-content"/>
<scheme name="_hrc_int_N100DA-content-error">
<inherit scheme="_hrc_int_N100DA-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100DA-content-cdsect">
<inherit scheme="_hrc_int_N100DA-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100DA-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100DA-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100DA-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100DA-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: empty
-->
<scheme name="_hrc_int_N100E3-content"/>
<scheme name="_hrc_int_N100E3-content-error">
<inherit scheme="_hrc_int_N100E3-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100E3-content-cdsect">
<inherit scheme="_hrc_int_N100E3-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100E3-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100E3-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100E3-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100E3-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: text
-->
<scheme name="_hrc_int_N100E8-content"/>
<scheme name="_hrc_int_N100E8-content-error">
<inherit scheme="_hrc_int_N100E8-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100E8-content-cdsect">
<inherit scheme="_hrc_int_N100E8-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100E8-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100E8-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100E8-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100E8-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: value
-->
<scheme name="_hrc_int_N100ED-content"/>
<scheme name="_hrc_int_N100ED-content-error">
<inherit scheme="_hrc_int_N100ED-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100ED-content-cdsect">
<inherit scheme="_hrc_int_N100ED-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100ED-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(type)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100ED-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100ED-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N100ED-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: data
-->
<scheme name="_hrc_int_N100F7-content">
<inherit scheme="param-element"/>
<inherit scheme="except-element"/>
</scheme>
<scheme name="_hrc_int_N100F7-content-error">
<inherit scheme="_hrc_int_N100F7-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100F7-content-cdsect">
<inherit scheme="_hrc_int_N100F7-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100F7-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(type)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N100F7-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100F7-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100F7-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: notAllowed
-->
<scheme name="_hrc_int_N1010B-content"/>
<scheme name="_hrc_int_N1010B-content-error">
<inherit scheme="_hrc_int_N1010B-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1010B-content-cdsect">
<inherit scheme="_hrc_int_N1010B-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1010B-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N1010B-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1010B-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1010B-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: externalRef
-->
<scheme name="_hrc_int_N10110-content"/>
<scheme name="_hrc_int_N10110-content-error">
<inherit scheme="_hrc_int_N10110-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10110-content-cdsect">
<inherit scheme="_hrc_int_N10110-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10110-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(href)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10110-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10110-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10110-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: grammar
-->
<scheme name="_hrc_int_N10119-content">
<inherit scheme="grammarContent-group"/>
</scheme>
<scheme name="_hrc_int_N10119-content-error">
<inherit scheme="_hrc_int_N10119-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10119-content-cdsect">
<inherit scheme="_hrc_int_N10119-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10119-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10119-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10119-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10119-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: param
-->
<scheme name="_hrc_int_N10123-content"/>
<scheme name="_hrc_int_N10123-content-error">
<inherit scheme="_hrc_int_N10123-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10123-content-cdsect">
<inherit scheme="_hrc_int_N10123-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10123-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N10123-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10123-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10123-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: except
-->
<scheme name="_hrc_int_N1012B-content">
<inherit scheme="nameClass-group"/>
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N1012B-content-error">
<inherit scheme="_hrc_int_N1012B-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1012B-content-cdsect">
<inherit scheme="_hrc_int_N1012B-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1012B-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N1012B-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1012B-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1012B-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: div
-->
<scheme name="_hrc_int_N10136-content">
<inherit scheme="grammarContent-group"/>
</scheme>
<scheme name="_hrc_int_N10136-content-error">
<inherit scheme="_hrc_int_N10136-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10136-content-cdsect">
<inherit scheme="_hrc_int_N10136-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10136-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10136-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10136-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10136-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: include
-->
<scheme name="_hrc_int_N10140-content">
<inherit scheme="includeContent-group"/>
</scheme>
<scheme name="_hrc_int_N10140-content-error">
<inherit scheme="_hrc_int_N10140-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10140-content-cdsect">
<inherit scheme="_hrc_int_N10140-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10140-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(href)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10140-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10140-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10140-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: start
-->
<scheme name="_hrc_int_N1014E-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N1014E-content-error">
<inherit scheme="_hrc_int_N1014E-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1014E-content-cdsect">
<inherit scheme="_hrc_int_N1014E-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1014E-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(combine)\M([\s\=]|$)/x" scheme="_hrc_int_N10155-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N1014E-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1014E-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1014E-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: combine
-->
<scheme name="_hrc_int_N10155-content">
<regexp region="Enumeration" match="/choice/"/>
<regexp region="Enumeration" match="/interleave/"/>
</scheme>
<scheme name="_hrc_int_N10155-content-error">
<inherit scheme="_hrc_int_N10155-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10155-Attributes"/>
<scheme name="_hrc_int_N10155-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N10155-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: define
-->
<scheme name="_hrc_int_N10160-content">
<inherit scheme="pattern-group"/>
</scheme>
<scheme name="_hrc_int_N10160-content-error">
<inherit scheme="_hrc_int_N10160-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10160-content-cdsect">
<inherit scheme="_hrc_int_N10160-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10160-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(combine)\M([\s\=]|$)/x" scheme="_hrc_int_N1016C-AttributeContent"/>
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10160-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10160-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10160-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: combine
-->
<scheme name="_hrc_int_N1016C-content">
<regexp region="Enumeration" match="/choice/"/>
<regexp region="Enumeration" match="/interleave/"/>
</scheme>
<scheme name="_hrc_int_N1016C-content-error">
<inherit scheme="_hrc_int_N1016C-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1016C-Attributes"/>
<scheme name="_hrc_int_N1016C-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N1016C-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: name
-->
<scheme name="_hrc_int_N10177-content"/>
<scheme name="_hrc_int_N10177-content-error">
<inherit scheme="_hrc_int_N10177-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10177-content-cdsect">
<inherit scheme="_hrc_int_N10177-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10177-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10177-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10177-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10177-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: anyName
-->
<scheme name="_hrc_int_N1017D-content">
<inherit scheme="except-element"/>
</scheme>
<scheme name="_hrc_int_N1017D-content-error">
<inherit scheme="_hrc_int_N1017D-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1017D-content-cdsect">
<inherit scheme="_hrc_int_N1017D-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1017D-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N1017D-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1017D-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1017D-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: nsName
-->
<scheme name="_hrc_int_N10187-content">
<inherit scheme="except-element"/>
</scheme>
<scheme name="_hrc_int_N10187-content-error">
<inherit scheme="_hrc_int_N10187-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10187-content-cdsect">
<inherit scheme="_hrc_int_N10187-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10187-Attributes">
<inherit scheme="commonAtts-attributeGroup"/>
</scheme>
<scheme name="_hrc_int_N10187-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10187-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10187-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>

<scheme name="relaxng-root">
<inherit scheme="grammar-element"/>
</scheme>
<scheme name="relaxng-root-addref">
<inherit scheme="relaxng-root"/>
</scheme>
<scheme name="relaxng">
<inherit scheme="xml:singleroot">
<virtual subst-scheme="relaxng-root-addref" scheme="xml:element"/>
</inherit>
</scheme>
</type>
</hrc>
