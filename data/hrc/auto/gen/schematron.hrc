<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd" version="take5">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="schematron" group="group" description="schematron" targetNamespace="http://www.ascc.net/xml/schematron">
    <location link="schematron.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="schematron">
<annotation>
<documentation>
           XSLT Generated HRC scheme for language 'schematron'
           from XML Schema with xsd2hrc.xsl version 0.9.4 
            Copyright (C) 2002-04 Cail Lomecb
            Portions copyright (C) 2004-06 Eugene Efremov

           Scheme parameters:
             targetNamespace             : http://www.ascc.net/xml/schematron
             hrctype                     : schematron
             allow-common-attr           : yes
             allow-any-attr              : no
             allow-unknown-elements      : no
             allow-unknown-root-elements : no
             force-single-root           : yes
             default prefixes            : (?{}(?{}sch)(?{}:))?
               you can change them with entity 'nsprefix'
             
             </documentation>
<documentation>
          Schema documentation:</documentation>
<contributors><![CDATA[Eugene Efremov]]></contributors>
</annotation>
<import type="def"/>
<region parent="xml:element.defined.start.name" name="element.start.name"/>
<region parent="xml:element.defined.end.name" name="element.end.name"/>
<region parent="xml:element.start.lt" name="element.start.lt"/>
<region parent="xml:element.start.gt" name="element.start.gt"/>
<region parent="xml:element.end.lt" name="element.end.lt"/>
<region parent="xml:element.end.gt" name="element.end.gt"/>
<region parent="element.start.name" name="element.nsprefix"/>
<region parent="xml:element.nscolon" name="element.nscolon"/>
<region parent="xml:Attribute.defined.name" name="Attribute.name"/>
<region parent="xml:Attribute.nsprefix" name="Attribute.nsprefix"/>
<region parent="xml:Attribute.nscolon" name="Attribute.nscolon"/>
<region parent="xml:AttValue.defined" name="AttValue"/>
<region parent="xml:AttValue.defined.start" name="AttValue.start"/>
<region parent="xml:AttValue.defined.end" name="AttValue.end"/>
<region description="Enumerated type values" parent="xml:Enumeration" name="Enumeration"/>
<region description="Test phase" name="phaseOutlined" parent="def:Outlined"/>
<region description="Pattern selection" name="patternOutlined" parent="def:Outlined"/>
<region description="Stylesheet rule" name="ruleOutlined" parent="def:Outlined"/>
<entity value="(?{}(?{}sch)(?{}:))" name="ns-real-prefix"/>
<entity value="(?{}(?{}sch)(?{}:))?" name="nsprefix"/>
<entity value="(?{}(?{}sch)(?{Attribute.nscolon}:))" name="attr-nsprefix"/>
<scheme name="_hrc_int_elementContent">
<block scheme="xml:elementContent2" region19="element.start.gt" region18="element.end.gt" region17="element.end.name" region16="element.nscolon" region15="element.nsprefix" region12="element.end.lt" region11="PairEnd" region07="element.start.name" region06="element.nscolon" region05="element.nsprefix" region02="element.start.lt" region01="PairStart" end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x" start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_AttValue">
<block region="AttValue" scheme="xml:AttValue.content.quot" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(&quot;)/"/>
<block region="AttValue" scheme="xml:AttValue.content.apos" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(')/"/>
</scheme>
<scheme name="AttributeContent">
<inherit scheme="xml:AttributeContent">
<virtual subst-scheme="_hrc_int_AttValue" scheme="xml:AttValue"/>
</inherit>
</scheme>
<!--custom schemes from '../../src/hrc/sch/src/custom.sch.xml'-->
<scheme name="path-content">
<inherit scheme="xslt:pattern-content"/>
</scheme>
<scheme name="expr-content">
<inherit scheme="xslt:expr-content"/>
</scheme>
<!--end custom-->
<scheme name="active-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;active ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10023-elementContent"/>
</scheme>
<scheme name="assert-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;assert ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10034-elementContent"/>
</scheme>
<scheme name="diagnostic-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;diagnostic ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1005F-elementContent"/>
</scheme>
<scheme name="diagnostics-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;diagnostics ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1007D-elementContent"/>
</scheme>
<scheme name="dir-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;dir ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10085-elementContent"/>
</scheme>
<scheme name="emph-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;emph ([\s\/&gt;]|$) )/x" scheme="xmlschema:string-elementContent"/>
</scheme>
<scheme name="extends-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;extends ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10097-elementContent"/>
</scheme>
<scheme name="key-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;key ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1009E-elementContent"/>
</scheme>
<scheme name="name-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;name ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100AC-elementContent"/>
</scheme>
<scheme name="ns-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;ns ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100B3-elementContent"/>
</scheme>
<scheme name="p-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;p ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100BD-elementContent"/>
</scheme>
<scheme name="pattern-element">
<regexp region4="patternOutlined" match="/\M (&lt; %nsprefix;pattern \b.*? (([\x22\x27])(.*?)(\3)) )/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;pattern ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100D8-elementContent"/>
</scheme>
<scheme name="phase-element">
<regexp region1="phaseOutlined" match="/\M (&lt; %nsprefix;phase \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;phase ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N100F0-elementContent"/>
</scheme>
<scheme name="report-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;report ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10105-elementContent"/>
</scheme>
<scheme name="rule-element">
<regexp region1="ruleOutlined" match="/\M (&lt; %nsprefix;rule \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;rule ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1012D-elementContent"/>
</scheme>
<scheme name="schema-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;schema ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10147-elementContent"/>
</scheme>
<scheme name="span-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;span ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101B9-elementContent"/>
</scheme>
<scheme name="title-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;title ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101C2-elementContent"/>
</scheme>
<scheme name="value-of-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;value-of ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N101CB-elementContent"/>
</scheme>
<!--
-->
<scheme name="expr-content-old">
<!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: .+-->
<regexp priority="low" region="Enumeration" match="/.+/"/>
</scheme>
<scheme name="expr-content-error">
<inherit scheme="expr-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="expr-content-cdsect">
<inherit scheme="expr-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="expr-Attributes"/>
<scheme name="expr-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="expr-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="expr-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="expr-content-cdsect" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="expr-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="expr-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<scheme name="path-content-old">
<!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: .+-->
<regexp priority="low" region="Enumeration" match="/.+/"/>
</scheme>
<scheme name="path-content-error">
<inherit scheme="path-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="path-content-cdsect">
<inherit scheme="path-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="path-Attributes"/>
<scheme name="path-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="path-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<scheme name="path-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="path-content-cdsect" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="path-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="path-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: active
-->
<scheme name="_hrc_int_N10023-content">
<inherit scheme="dir-element"/>
<inherit scheme="emph-element"/>
<inherit scheme="span-element"/>
</scheme>
<scheme name="_hrc_int_N10023-content-error">
<inherit scheme="_hrc_int_N10023-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10023-content-cdsect">
<inherit scheme="_hrc_int_N10023-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10023-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(pattern)\M([\s\=]|$)/x" scheme="xmlschema:IDREF-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N10023-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10023-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10023-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: assert
-->
<scheme name="_hrc_int_N10034-content">
<inherit scheme="name-element"/>
<inherit scheme="emph-element"/>
<inherit scheme="dir-element"/>
<inherit scheme="span-element"/>
<regexp region="def:Error" match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x"/>
<inherit scheme="xml:element"/>
</scheme>
<scheme name="_hrc_int_N10034-content-error">
<inherit scheme="_hrc_int_N10034-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10034-content-cdsect">
<inherit scheme="_hrc_int_N10034-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10034-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(test)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(role)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(diagnostics)\M([\s\=]|$)/x" scheme="xmlschema:IDREFS-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(subject)\M([\s\=]|$)/x" scheme="path-AttributeContent"/>
<inherit scheme="xmlns:lang-attribute"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10034-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10034-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10034-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: diagnostic
-->
<scheme name="_hrc_int_N1005F-content">
<inherit scheme="value-of-element"/>
<inherit scheme="emph-element"/>
<inherit scheme="dir-element"/>
<inherit scheme="span-element"/>
<regexp region="def:Error" match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x"/>
<inherit scheme="xml:element"/>
</scheme>
<scheme name="_hrc_int_N1005F-content-error">
<inherit scheme="_hrc_int_N1005F-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1005F-content-cdsect">
<inherit scheme="_hrc_int_N1005F-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1005F-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:ID-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<inherit scheme="xmlns:lang-attribute"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1005F-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1005F-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N1005F-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: diagnostics
-->
<scheme name="_hrc_int_N1007D-content">
<inherit scheme="diagnostic-element"/>
</scheme>
<scheme name="_hrc_int_N1007D-content-error">
<inherit scheme="_hrc_int_N1007D-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1007D-content-cdsect">
<inherit scheme="_hrc_int_N1007D-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1007D-Attributes"/>
<scheme name="_hrc_int_N1007D-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1007D-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1007D-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: dir
-->
<scheme name="_hrc_int_N10085-content">
<inherit scheme="xmlschema:string-content"/>
</scheme>
<scheme name="_hrc_int_N10085-content-error">
<inherit scheme="_hrc_int_N10085-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10085-content-cdsect">
<inherit scheme="_hrc_int_N10085-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10085-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(value)\M([\s\=]|$)/x" scheme="_hrc_int_N1008B-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N10085-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10085-content-cdsect" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="_hrc_int_N10085-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10085-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: value
-->
<scheme name="_hrc_int_N1008B-content">
<regexp region="Enumeration" match="/ltr/"/>
<regexp region="Enumeration" match="/rtl/"/>
</scheme>
<scheme name="_hrc_int_N1008B-content-error">
<inherit scheme="_hrc_int_N1008B-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1008B-Attributes"/>
<scheme name="_hrc_int_N1008B-AttributeContent">
<inherit scheme="AttributeContent">
<virtual subst-scheme="_hrc_int_N1008B-content-error" scheme="xml:AttValue.content.stream"/>
</inherit>
</scheme>
<!--
        parent: extends
-->
<scheme name="_hrc_int_N10097-content"/>
<scheme name="_hrc_int_N10097-content-error">
<inherit scheme="_hrc_int_N10097-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10097-content-cdsect">
<inherit scheme="_hrc_int_N10097-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10097-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(rule)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N10097-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10097-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10097-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: key
-->
<scheme name="_hrc_int_N1009E-content"/>
<scheme name="_hrc_int_N1009E-content-error">
<inherit scheme="_hrc_int_N1009E-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1009E-content-cdsect">
<inherit scheme="_hrc_int_N1009E-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1009E-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(path)\M([\s\=]|$)/x" scheme="path-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N1009E-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1009E-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1009E-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: name
-->
<scheme name="_hrc_int_N100AC-content"/>
<scheme name="_hrc_int_N100AC-content-error">
<inherit scheme="_hrc_int_N100AC-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100AC-content-cdsect">
<inherit scheme="_hrc_int_N100AC-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100AC-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(path)\M([\s\=]|$)/x" scheme="path-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N100AC-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100AC-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100AC-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: ns
-->
<scheme name="_hrc_int_N100B3-content"/>
<scheme name="_hrc_int_N100B3-content-error">
<inherit scheme="_hrc_int_N100B3-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100B3-content-cdsect">
<inherit scheme="_hrc_int_N100B3-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100B3-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(uri)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(prefix)\M([\s\=]|$)/x" scheme="xmlschema:NCName-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N100B3-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100B3-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100B3-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: p
-->
<scheme name="_hrc_int_N100BD-content">
<inherit scheme="dir-element"/>
<inherit scheme="emph-element"/>
<inherit scheme="span-element"/>
</scheme>
<scheme name="_hrc_int_N100BD-content-error">
<inherit scheme="_hrc_int_N100BD-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100BD-content-cdsect">
<inherit scheme="_hrc_int_N100BD-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100BD-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(class)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<inherit scheme="xmlns:lang-attribute"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N100BD-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100BD-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N100BD-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: pattern
-->
<scheme name="_hrc_int_N100D8-content">
<inherit scheme="p-element"/>
<inherit scheme="rule-element"/>
</scheme>
<scheme name="_hrc_int_N100D8-content-error">
<inherit scheme="_hrc_int_N100D8-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100D8-content-cdsect">
<inherit scheme="_hrc_int_N100D8-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100D8-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(see)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N100D8-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100D8-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100D8-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: phase
-->
<scheme name="_hrc_int_N100F0-content">
<inherit scheme="p-element"/>
<inherit scheme="active-element"/>
</scheme>
<scheme name="_hrc_int_N100F0-content-error">
<inherit scheme="_hrc_int_N100F0-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N100F0-content-cdsect">
<inherit scheme="_hrc_int_N100F0-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N100F0-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(fpi)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N100F0-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N100F0-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N100F0-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: report
-->
<scheme name="_hrc_int_N10105-content">
<inherit scheme="name-element"/>
<inherit scheme="emph-element"/>
<inherit scheme="dir-element"/>
<inherit scheme="span-element"/>
<regexp region="def:Error" match="/ &lt; (%ns-real-prefix;%xml:NCName; ([\s\/&gt;]|$) )/x"/>
<inherit scheme="xml:element"/>
</scheme>
<scheme name="_hrc_int_N10105-content-error">
<inherit scheme="_hrc_int_N10105-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10105-content-cdsect">
<inherit scheme="_hrc_int_N10105-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10105-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(test)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(role)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(diagnostics)\M([\s\=]|$)/x" scheme="xmlschema:IDREFS-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(subject)\M([\s\=]|$)/x" scheme="path-AttributeContent"/>
<inherit scheme="xmlns:lang-attribute"/>
</scheme>
<scheme name="_hrc_int_N10105-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10105-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N10105-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: rule
-->
<scheme name="_hrc_int_N1012D-content">
<inherit scheme="assert-element"/>
<inherit scheme="report-element"/>
<inherit scheme="key-element"/>
<inherit scheme="extends-element"/>
</scheme>
<scheme name="_hrc_int_N1012D-content-error">
<inherit scheme="_hrc_int_N1012D-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1012D-content-cdsect">
<inherit scheme="_hrc_int_N1012D-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1012D-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(context)\M([\s\=]|$)/x" scheme="path-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(abstract)\M([\s\=]|$)/x" scheme="xmlschema:boolean-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(role)\M([\s\=]|$)/x" scheme="xmlschema:NMTOKEN-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N1012D-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1012D-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1012D-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: schema
-->
<scheme name="_hrc_int_N10147-content">
<inherit scheme="title-element"/>
<inherit scheme="ns-element"/>
<inherit scheme="p-element"/>
<inherit scheme="phase-element"/>
<inherit scheme="pattern-element"/>
<inherit scheme="p-element"/>
<inherit scheme="diagnostics-element"/>
</scheme>
<scheme name="_hrc_int_N10147-content-error">
<inherit scheme="_hrc_int_N10147-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10147-content-cdsect">
<inherit scheme="_hrc_int_N10147-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10147-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:ID-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(fpi)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(schemaVersion)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(defaultPhase)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(icon)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(ns)\M([\s\=]|$)/x" scheme="xmlschema:anyURI-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(version)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xmlns:lang-attribute"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10147-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10147-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10147-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: span
-->
<scheme name="_hrc_int_N101B9-content">
<inherit scheme="xmlschema:string-content"/>
</scheme>
<scheme name="_hrc_int_N101B9-content-error">
<inherit scheme="_hrc_int_N101B9-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N101B9-content-cdsect">
<inherit scheme="_hrc_int_N101B9-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N101B9-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(class)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N101B9-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101B9-content-cdsect" scheme="xml:CDSect.content.stream"/>
<virtual subst-scheme="_hrc_int_N101B9-content-error" scheme="xml:content.cdata.stream"/>
<virtual subst-scheme="def:empty" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N101B9-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: title
-->
<scheme name="_hrc_int_N101C2-content">
<inherit scheme="dir-element"/>
</scheme>
<scheme name="_hrc_int_N101C2-content-error">
<inherit scheme="_hrc_int_N101C2-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N101C2-content-cdsect">
<inherit scheme="_hrc_int_N101C2-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N101C2-Attributes"/>
<scheme name="_hrc_int_N101C2-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101C2-content" scheme="xml:element"/>
<virtual subst-scheme="_hrc_int_N101C2-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: value-of
-->
<scheme name="_hrc_int_N101CB-content"/>
<scheme name="_hrc_int_N101CB-content-error">
<inherit scheme="_hrc_int_N101CB-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N101CB-content-cdsect">
<inherit scheme="_hrc_int_N101CB-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N101CB-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(select)\M([\s\=]|$)/x" scheme="expr-AttributeContent"/>
</scheme>
<scheme name="_hrc_int_N101CB-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N101CB-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N101CB-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>

<scheme name="schematron-root">
<inherit scheme="schema-element"/>
</scheme>
<scheme name="schematron-root-addref">
<inherit scheme="schematron-root"/>
</scheme>
<scheme name="schematron">
<inherit scheme="xml:singleroot">
<virtual subst-scheme="schematron-root-addref" scheme="xml:element"/>
</inherit>
</scheme>
</type>
</hrc>
