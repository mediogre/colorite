<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd" version="take5">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="calcset" group="group" description="calcset" targetNamespace="">
    <location link="calcset.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="calcset">
<annotation>
<documentation>
           XSLT Generated HRC scheme for language 'calcset'
           from XML Schema with xsd2hrc.xsl version 0.9.4 
            Copyright (C) 2002-04 Cail Lomecb
            Portions copyright (C) 2004-06 Eugene Efremov

           Scheme parameters:
             targetNamespace             : 
             hrctype                     : calcset
             allow-common-attr           : yes
             allow-any-attr              : yes
             allow-unknown-elements      : no
             allow-unknown-root-elements : no
             force-single-root           : yes
             default prefixes            : 
               you can change them with entity 'nsprefix'
             
             </documentation>
<documentation>
          Schema documentation:
    FAR Manager Calculator plugin settings (calcset.csr) xml schema.
  </documentation>
<contributors><![CDATA[None]]></contributors>
</annotation>
<import type="def"/>
<region parent="xml:element.defined.start.name" name="element.start.name"/>
<region parent="xml:element.defined.end.name" name="element.end.name"/>
<region parent="xml:element.start.lt" name="element.start.lt"/>
<region parent="xml:element.start.gt" name="element.start.gt"/>
<region parent="xml:element.end.lt" name="element.end.lt"/>
<region parent="xml:element.end.gt" name="element.end.gt"/>
<region parent="element.start.name" name="element.nsprefix"/>
<region parent="xml:element.nscolon" name="element.nscolon"/>
<region parent="xml:Attribute.defined.name" name="Attribute.name"/>
<region parent="xml:Attribute.nsprefix" name="Attribute.nsprefix"/>
<region parent="xml:Attribute.nscolon" name="Attribute.nscolon"/>
<region parent="xml:AttValue.defined" name="AttValue"/>
<region parent="xml:AttValue.defined.start" name="AttValue.start"/>
<region parent="xml:AttValue.defined.end" name="AttValue.end"/>
<region description="Enumerated type values" parent="xml:Enumeration" name="Enumeration"/>
<entity value="" name="ns-real-prefix"/>
<entity value="" name="nsprefix"/>
<entity value="" name="attr-nsprefix"/>
<scheme name="_hrc_int_elementContent">
<block scheme="xml:elementContent2" region19="element.start.gt" region18="element.end.gt" region17="element.end.name" region16="element.nscolon" region15="element.nsprefix" region12="element.end.lt" region11="PairEnd" region07="element.start.name" region06="element.nscolon" region05="element.nsprefix" region02="element.start.lt" region01="PairStart" end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x" start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_AttValue">
<block region="AttValue" scheme="xml:AttValue.content.quot" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(&quot;)/"/>
<block region="AttValue" scheme="xml:AttValue.content.apos" region11="AttValue.end" region01="AttValue.start" region10="PairEnd" region00="PairStart" end="/(\y1)/" start="/(')/"/>
</scheme>
<scheme name="AttributeContent">
<inherit scheme="xml:AttributeContent">
<virtual subst-scheme="_hrc_int_AttValue" scheme="xml:AttValue"/>
</inherit>
</scheme>
<!--custom schemes from 'custom.default.xml'-->
<!--end custom-->
<scheme name="calc-element">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;calc ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1000A-elementContent"/>
</scheme>
<!--
        parent: calc
-->
<scheme name="_hrc_int_N1000A-content">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;set ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10010-elementContent"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;use ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1003B-elementContent"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;lang ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10041-elementContent"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;dialog ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10048-elementContent"/>
</scheme>
<scheme name="_hrc_int_N1000A-content-error">
<inherit scheme="_hrc_int_N1000A-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1000A-content-cdsect">
<inherit scheme="_hrc_int_N1000A-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1000A-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(version)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1000A-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1000A-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1000A-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: set
-->
<scheme name="_hrc_int_N10010-content">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;const ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10016-elementContent"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;op ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10021-elementContent"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;func ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1002C-elementContent"/>
</scheme>
<scheme name="_hrc_int_N10010-content-error">
<inherit scheme="_hrc_int_N10010-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10010-content-cdsect">
<inherit scheme="_hrc_int_N10010-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10010-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10010-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10010-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10010-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: const
-->
<scheme name="_hrc_int_N10016-content"/>
<scheme name="_hrc_int_N10016-content-error">
<inherit scheme="_hrc_int_N10016-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10016-content-cdsect">
<inherit scheme="_hrc_int_N10016-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10016-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(syntax)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(mean)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10016-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10016-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10016-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: op
-->
<scheme name="_hrc_int_N10021-content"/>
<scheme name="_hrc_int_N10021-content-error">
<inherit scheme="_hrc_int_N10021-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10021-content-cdsect">
<inherit scheme="_hrc_int_N10021-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10021-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(syntax)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(mean)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10021-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10021-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10021-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: func
-->
<scheme name="_hrc_int_N1002C-content"/>
<scheme name="_hrc_int_N1002C-content-error">
<inherit scheme="_hrc_int_N1002C-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1002C-content-cdsect">
<inherit scheme="_hrc_int_N1002C-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1002C-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(syntax)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(mean)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1002C-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1002C-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1002C-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: use
-->
<scheme name="_hrc_int_N1003B-content"/>
<scheme name="_hrc_int_N1003B-content-error">
<inherit scheme="_hrc_int_N1003B-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1003B-content-cdsect">
<inherit scheme="_hrc_int_N1003B-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1003B-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(set)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1003B-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1003B-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1003B-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: lang
-->
<scheme name="_hrc_int_N10041-content"/>
<scheme name="_hrc_int_N10041-content-error">
<inherit scheme="_hrc_int_N10041-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10041-content-cdsect">
<inherit scheme="_hrc_int_N10041-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10041-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(id)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10041-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10041-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10041-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: dialog
-->
<scheme name="_hrc_int_N10048-content">
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;text ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N1004E-elementContent"/>
<block end="/ &gt; /x" start="/\M &lt; (%nsprefix;field ([\s\/&gt;]|$) )/x" scheme="_hrc_int_N10055-elementContent"/>
</scheme>
<scheme name="_hrc_int_N10048-content-error">
<inherit scheme="_hrc_int_N10048-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10048-content-cdsect">
<inherit scheme="_hrc_int_N10048-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10048-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10048-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10048-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10048-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: text
-->
<scheme name="_hrc_int_N1004E-content"/>
<scheme name="_hrc_int_N1004E-content-error">
<inherit scheme="_hrc_int_N1004E-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N1004E-content-cdsect">
<inherit scheme="_hrc_int_N1004E-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N1004E-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N1004E-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N1004E-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N1004E-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>
<!--
        parent: field
-->
<scheme name="_hrc_int_N10055-content"/>
<scheme name="_hrc_int_N10055-content-error">
<inherit scheme="_hrc_int_N10055-content"/>
<inherit scheme="xml:badChar"/>
</scheme>
<scheme name="_hrc_int_N10055-content-cdsect">
<inherit scheme="_hrc_int_N10055-content-error">
<virtual subst-scheme="xml:badCDLiter" scheme="xml:badLiter"/>
<virtual subst-scheme="def:empty" scheme="xml:Reference"/>
</inherit>
</scheme>
<scheme name="_hrc_int_N10055-Attributes">
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(name)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<block region02="Attribute.name" end="/[&quot;']?#1/" start="/(\s?#1|^)(scale)\M([\s\=]|$)/x" scheme="xmlschema:string-AttributeContent"/>
<inherit scheme="xml:Attribute.any"/>
</scheme>
<scheme name="_hrc_int_N10055-elementContent">
<inherit scheme="_hrc_int_elementContent">
<virtual subst-scheme="_hrc_int_N10055-content" scheme="xml:element"/>
<virtual subst-scheme="xml:badChar" scheme="xml:content.cdata"/>
<virtual subst-scheme="_hrc_int_N10055-Attributes" scheme="xml:Attribute.any"/>
</inherit>
</scheme>

<scheme name="calcset-root">
<annotation>
<documentation>
               You can replace these elements with needed single root element
               with customizing HRC generation process.
              </documentation>
</annotation>
<inherit scheme="calc-element"/>
</scheme>
<scheme name="calcset-root-addref">
<inherit scheme="calcset-root"/>
</scheme>
<scheme name="calcset">
<inherit scheme="xml:singleroot">
<virtual subst-scheme="calcset-root-addref" scheme="xml:element"/>
</inherit>
</scheme>
</type>
</hrc>
